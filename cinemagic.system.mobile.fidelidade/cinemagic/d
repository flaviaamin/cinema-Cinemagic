
List of pre-defined events (to be used in -e):

  branch-instructions OR branches                    [Hardware event]
  branch-misses                                      [Hardware event]
  bus-cycles                                         [Hardware event]
  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  cpu-cycles OR cycles                               [Hardware event]
  instructions                                       [Hardware event]
  ref-cycles                                         [Hardware event]

  alignment-faults                                   [Software event]
  bpf-output                                         [Software event]
  context-switches OR cs                             [Software event]
  cpu-clock                                          [Software event]
  cpu-migrations OR migrations                       [Software event]
  dummy                                              [Software event]
  emulation-faults                                   [Software event]
  major-faults                                       [Software event]
  minor-faults                                       [Software event]
  page-faults OR faults                              [Software event]
  task-clock                                         [Software event]

  duration_time                                      [Tool event]

  L1-dcache-load-misses                              [Hardware cache event]
  L1-dcache-loads                                    [Hardware cache event]
  L1-dcache-stores                                   [Hardware cache event]
  L1-icache-load-misses                              [Hardware cache event]
  LLC-load-misses                                    [Hardware cache event]
  LLC-loads                                          [Hardware cache event]
  LLC-store-misses                                   [Hardware cache event]
  LLC-stores                                         [Hardware cache event]
  branch-load-misses                                 [Hardware cache event]
  branch-loads                                       [Hardware cache event]
  dTLB-load-misses                                   [Hardware cache event]
  dTLB-loads                                         [Hardware cache event]
  dTLB-store-misses                                  [Hardware cache event]
  dTLB-stores                                        [Hardware cache event]
  iTLB-load-misses                                   [Hardware cache event]
  iTLB-loads                                         [Hardware cache event]
  node-load-misses                                   [Hardware cache event]
  node-loads                                         [Hardware cache event]
  node-store-misses                                  [Hardware cache event]
  node-stores                                        [Hardware cache event]

  branch-instructions OR cpu/branch-instructions/    [Kernel PMU event]
  branch-misses OR cpu/branch-misses/                [Kernel PMU event]
  bus-cycles OR cpu/bus-cycles/                      [Kernel PMU event]
  cache-misses OR cpu/cache-misses/                  [Kernel PMU event]
  cache-references OR cpu/cache-references/          [Kernel PMU event]
  cpu-cycles OR cpu/cpu-cycles/                      [Kernel PMU event]
  cstate_core/c3-residency/                          [Kernel PMU event]
  cstate_core/c6-residency/                          [Kernel PMU event]
  cstate_core/c7-residency/                          [Kernel PMU event]
  cstate_pkg/c2-residency/                           [Kernel PMU event]
  cstate_pkg/c3-residency/                           [Kernel PMU event]
  cstate_pkg/c6-residency/                           [Kernel PMU event]
  cstate_pkg/c7-residency/                           [Kernel PMU event]
  i915/actual-frequency/                             [Kernel PMU event]
  i915/bcs0-busy/                                    [Kernel PMU event]
  i915/bcs0-sema/                                    [Kernel PMU event]
  i915/bcs0-wait/                                    [Kernel PMU event]
  i915/interrupts/                                   [Kernel PMU event]
  i915/rc6-residency/                                [Kernel PMU event]
  i915/rcs0-busy/                                    [Kernel PMU event]
  i915/rcs0-sema/                                    [Kernel PMU event]
  i915/rcs0-wait/                                    [Kernel PMU event]
  i915/requested-frequency/                          [Kernel PMU event]
  i915/vcs0-busy/                                    [Kernel PMU event]
  i915/vcs0-sema/                                    [Kernel PMU event]
  i915/vcs0-wait/                                    [Kernel PMU event]
  i915/vecs0-busy/                                   [Kernel PMU event]
  i915/vecs0-sema/                                   [Kernel PMU event]
  i915/vecs0-wait/                                   [Kernel PMU event]
  instructions OR cpu/instructions/                  [Kernel PMU event]
  intel_pt//                                         [Kernel PMU event]
  mem-loads OR cpu/mem-loads/                        [Kernel PMU event]
  mem-stores OR cpu/mem-stores/                      [Kernel PMU event]
  msr/aperf/                                         [Kernel PMU event]
  msr/cpu_thermal_margin/                            [Kernel PMU event]
  msr/mperf/                                         [Kernel PMU event]
  msr/smi/                                           [Kernel PMU event]
  msr/tsc/                                           [Kernel PMU event]
  power/energy-cores/                                [Kernel PMU event]
  power/energy-gpu/                                  [Kernel PMU event]
  power/energy-pkg/                                  [Kernel PMU event]
  ref-cycles OR cpu/ref-cycles/                      [Kernel PMU event]
  topdown-fetch-bubbles OR cpu/topdown-fetch-bubbles/ [Kernel PMU event]
  topdown-recovery-bubbles OR cpu/topdown-recovery-bubbles/ [Kernel PMU event]
  topdown-slots-issued OR cpu/topdown-slots-issued/  [Kernel PMU event]
  topdown-slots-retired OR cpu/topdown-slots-retired/ [Kernel PMU event]
  topdown-total-slots OR cpu/topdown-total-slots/    [Kernel PMU event]
  uncore_cbox_0/clockticks/                          [Kernel PMU event]
  uncore_cbox_1/clockticks/                          [Kernel PMU event]
  uncore_imc/data_reads/                             [Kernel PMU event]
  uncore_imc/data_writes/                            [Kernel PMU event]

cache:
  l1d.replacement                                   
       [L1D data line replacements]
  l1d_pend_miss.fb_full                             
       [Cycles a demand request was blocked due to Fill Buffers inavailability]
  l1d_pend_miss.pending                             
       [L1D miss oustandings duration in cycles]
  l1d_pend_miss.pending_cycles                      
       [Cycles with L1D load Misses outstanding]
  l1d_pend_miss.pending_cycles_any                  
       [Cycles with L1D load Misses outstanding from any thread on physical
        core]
  l2_demand_rqsts.wb_hit                            
       [Not rejected writebacks that hit L2 cache]
  l2_lines_in.all                                   
       [L2 cache lines filling L2]
  l2_lines_in.e                                     
       [L2 cache lines in E state filling L2]
  l2_lines_in.i                                     
       [L2 cache lines in I state filling L2]
  l2_lines_in.s                                     
       [L2 cache lines in S state filling L2]
  l2_lines_out.demand_clean                         
       [Clean L2 cache lines evicted by demand]
  l2_rqsts.all_code_rd                              
       [L2 code requests]
  l2_rqsts.all_demand_data_rd                       
       [Demand Data Read requests]
  l2_rqsts.all_demand_miss                          
       [Demand requests that miss L2 cache]
  l2_rqsts.all_demand_references                    
       [Demand requests to L2 cache]
  l2_rqsts.all_pf                                   
       [Requests from L2 hardware prefetchers]
  l2_rqsts.all_rfo                                  
       [RFO requests to L2 cache]
  l2_rqsts.code_rd_hit                              
       [L2 cache hits when fetching instructions, code reads]
  l2_rqsts.code_rd_miss                             
       [L2 cache misses when fetching instructions]
  l2_rqsts.demand_data_rd_hit                       
       [Demand Data Read requests that hit L2 cache]
  l2_rqsts.demand_data_rd_miss                      
       [Demand Data Read miss L2, no rejects]
  l2_rqsts.l2_pf_hit                                
       [L2 prefetch requests that hit L2 cache]
  l2_rqsts.l2_pf_miss                               
       [L2 prefetch requests that miss L2 cache]
  l2_rqsts.miss                                     
       [All requests that miss L2 cache]
  l2_rqsts.references                               
       [All L2 requests]
  l2_rqsts.rfo_hit                                  
       [RFO requests that hit L2 cache]
  l2_rqsts.rfo_miss                                 
       [RFO requests that miss L2 cache]
  l2_trans.all_pf                                   
       [L2 or L3 HW prefetches that access L2 cache]
  l2_trans.all_requests                             
       [Transactions accessing L2 pipe]
  l2_trans.code_rd                                  
       [L2 cache accesses when fetching instructions]
  l2_trans.demand_data_rd                           
       [Demand Data Read requests that access L2 cache]
  l2_trans.l1d_wb                                   
       [L1D writebacks that access L2 cache]
  l2_trans.l2_fill                                  
       [L2 fill requests that access L2 cache]
  l2_trans.l2_wb                                    
       [L2 writebacks that access L2 cache]
  l2_trans.rfo                                      
       [RFO requests that access L2 cache]
  lock_cycles.cache_lock_duration                   
       [Cycles when L1D is locked]
  longest_lat_cache.miss                            
       [Core-originated cacheable demand requests missed L3]
  longest_lat_cache.reference                       
       [Core-originated cacheable demand requests that refer to L3]
  mem_load_uops_l3_hit_retired.xsnp_hit             
       [Retired load uops which data sources were L3 and cross-core snoop hits
        in on-pkg core cache. (Precise Event - PEBS) Spec update: BDM100.
        Supports address when precise (Precise event)]
  mem_load_uops_l3_hit_retired.xsnp_hitm            
       [Retired load uops which data sources were HitM responses from shared
        L3. (Precise Event - PEBS) Spec update: BDM100. Supports address when
        precise (Precise event)]
  mem_load_uops_l3_hit_retired.xsnp_miss            
       [Retired load uops which data sources were L3 hit and cross-core snoop
        missed in on-pkg core cache. (Precise Event - PEBS) Spec update:
        BDM100. Supports address when precise (Precise event)]
  mem_load_uops_l3_hit_retired.xsnp_none            
       [Retired load uops which data sources were hits in L3 without snoops
        required. (Precise Event - PEBS) Spec update: BDM100. Supports address
        when precise (Precise event)]
  mem_load_uops_l3_miss_retired.local_dram          
       [(null)]
  mem_load_uops_retired.hit_lfb                     
       [Retired load uops which data sources were load uops missed L1 but hit
        FB due to preceding miss to the same cache line with data not ready.
        (Precise Event - PEBS) Supports address when precise (Precise event)]
  mem_load_uops_retired.l1_hit                      
       [Retired load uops with L1 cache hits as data sources. (Precise Event -
        PEBS) Supports address when precise (Precise event)]
  mem_load_uops_retired.l1_miss                     
       [Retired load uops misses in L1 cache as data sources. Uses PEBS
        Supports address when precise (Precise event)]
  mem_load_uops_retired.l2_hit                      
       [Retired load uops with L2 cache hits as data sources. (Precise Event -
        PEBS) Spec update: BDM35. Supports address when precise (Precise
        event)]
  mem_load_uops_retired.l2_miss                     
       [Retired load uops with L2 cache misses as data sources. Uses PEBS
        Supports address when precise (Precise event)]
  mem_load_uops_retired.l3_hit                      
       [Hit in last-level (L3) cache. Excludes Unknown data-source. (Precise
        Event - PEBS) Spec update: BDM100. Supports address when precise
        (Precise event)]
  mem_load_uops_retired.l3_miss                     
       [Miss in last-level (L3) cache. Excludes Unknown data-source. (Precise
        Event - PEBS) Spec update: BDM100, BDE70. Supports address when
        precise (Precise event)]
  mem_uops_retired.all_loads                        
       [All retired load uops. (Precise Event - PEBS) Supports address when
        precise (Precise event)]
  mem_uops_retired.all_stores                       
       [Retired store uops that split across a cacheline boundary. (Precise
        Event - PEBS) Supports address when precise (Precise event)]
  mem_uops_retired.lock_loads                       
       [Retired load uops with locked access. (Precise Event - PEBS) Spec
        update: BDM35. Supports address when precise (Precise event)]
  mem_uops_retired.split_loads                      
       [Retired load uops that split across a cacheline boundary.(Precise
        Event - PEBS) Supports address when precise (Precise event)]
  mem_uops_retired.split_stores                     
       [Retired store uops that split across a cacheline boundary. (Precise
        Event - PEBS) Supports address when precise (Precise event)]
  mem_uops_retired.stlb_miss_loads                  
       [Retired load uops that miss the STLB. (Precise Event - PEBS) Supports
        address when precise (Precise event)]
  mem_uops_retired.stlb_miss_stores                 
       [Retired store uops that miss the STLB. (Precise Event - PEBS) Supports
        address when precise (Precise event)]
  offcore_requests.all_data_rd                      
       [Demand and prefetch data reads]
  offcore_requests.demand_code_rd                   
       [Cacheable and noncachaeble code read requests]
  offcore_requests.demand_data_rd                   
       [Demand Data Read requests sent to uncore]
  offcore_requests.demand_rfo                       
       [Demand RFO requests including regular RFOs, locks, ItoM]
  offcore_requests_buffer.sq_full                   
       [Offcore requests buffer cannot take more entries for this thread core]
  offcore_requests_outstanding.all_data_rd          
       [Offcore outstanding cacheable Core Data Read transactions in
        SuperQueue (SQ), queue to uncore Spec update: BDM76]
  offcore_requests_outstanding.cycles_with_data_rd  
       [Cycles when offcore outstanding cacheable Core Data Read transactions
        are present in SuperQueue (SQ), queue to uncore Spec update: BDM76]
  offcore_requests_outstanding.cycles_with_demand_data_rd
       [Cycles when offcore outstanding Demand Data Read transactions are
        present in SuperQueue (SQ), queue to uncore Spec update: BDM76]
  offcore_requests_outstanding.cycles_with_demand_rfo
       [Offcore outstanding demand rfo reads transactions in SuperQueue (SQ),
        queue to uncore, every cycle Spec update: BDM76]
  offcore_requests_outstanding.demand_code_rd       
       [Offcore outstanding code reads transactions in SuperQueue (SQ), queue
        to uncore, every cycle Spec update: BDM76]
  offcore_requests_outstanding.demand_data_rd       
       [Offcore outstanding Demand Data Read transactions in uncore queue Spec
        update: BDM76]
  offcore_requests_outstanding.demand_data_rd_ge_6  
       [Cycles with at least 6 offcore outstanding Demand Data Read
        transactions in uncore queue Spec update: BDM76]
  offcore_requests_outstanding.demand_rfo           
       [Offcore outstanding RFO store transactions in SuperQueue (SQ), queue
        to uncore Spec update: BDM76]
  offcore_response                                  
       [Offcore response can be programmed only with a specific pair of event
        select and counter MSR, and with specific event codes and predefine
        mask bit value in a dedicated MSR to specify attributes of the offcore
        transaction]
  offcore_response.all_data_rd.any_response         
       [Counts all demand & prefetch data reads have any response type]
  offcore_response.all_data_rd.l3_hit.any_snoop     
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_hit.snoop_hitm    
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_hit.snoop_miss    
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_hit.snoop_none    
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_hit.snoop_not_needed
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.any_snoop
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_hit_no_fwd
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_hitm
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_miss
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_none
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_not_needed
       [Counts all demand & prefetch data reads]
  offcore_response.all_pf_code_rd.any_response      
       [Counts all prefetch code reads have any response type]
  offcore_response.all_pf_code_rd.l3_hit.any_snoop  
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_hitm 
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_miss 
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_none 
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_not_needed
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.any_snoop
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_hitm
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_miss
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_none
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_not_needed
       [Counts all prefetch code reads]
  offcore_response.all_pf_data_rd.any_response      
       [Counts all prefetch data reads have any response type]
  offcore_response.all_pf_data_rd.l3_hit.any_snoop  
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_hitm 
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_miss 
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_none 
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_not_needed
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.any_snoop
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_hitm
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_miss
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_none
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_not_needed
       [Counts all prefetch data reads]
  offcore_response.all_pf_rfo.any_response          
       [Counts prefetch RFOs have any response type]
  offcore_response.all_pf_rfo.l3_hit.any_snoop      
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_hit.snoop_hit_no_fwd
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_hit.snoop_hitm     
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_hit.snoop_miss     
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_hit.snoop_none     
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_hit.snoop_not_needed
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.any_snoop
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_hit_no_fwd
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_hitm
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_miss
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_none
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_not_needed
       [Counts prefetch RFOs]
  offcore_response.all_rfo.any_response             
       [Counts all demand & prefetch RFOs have any response type]
  offcore_response.all_rfo.l3_hit.any_snoop         
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_hit_no_fwd  
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_hitm        
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_miss        
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_none        
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_not_needed  
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.any_snoop  
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_hit_no_fwd
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_hitm 
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_miss 
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_none 
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_not_needed
       [Counts all demand & prefetch RFOs]
  offcore_response.corewb.any_response              
       [Counts writebacks (modified to exclusive) have any response type]
  offcore_response.corewb.l3_hit.any_snoop          
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_hit.snoop_hit_no_fwd   
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_hit.snoop_hitm         
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_hit.snoop_miss         
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_hit.snoop_none         
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_hit.snoop_not_needed   
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.any_snoop   
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_hit_no_fwd
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_hitm  
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_miss  
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_none  
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_not_needed
       [Counts writebacks (modified to exclusive)]
  offcore_response.demand_code_rd.any_response      
       [Counts all demand code reads have any response type]
  offcore_response.demand_code_rd.l3_hit.any_snoop  
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_hit.snoop_hit_no_fwd
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_hit.snoop_hitm 
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_hit.snoop_miss 
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_hit.snoop_none 
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_hit.snoop_not_needed
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.any_snoop
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_hit_no_fwd
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_hitm
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_miss
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_none
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_not_needed
       [Counts all demand code reads]
  offcore_response.demand_data_rd.any_response      
       [Counts demand data reads have any response type]
  offcore_response.demand_data_rd.l3_hit.any_snoop  
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_hit.snoop_hitm 
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_hit.snoop_miss 
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_hit.snoop_none 
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_hit.snoop_not_needed
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.any_snoop
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_hit_no_fwd
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_hitm
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_miss
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_none
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_not_needed
       [Counts demand data reads]
  offcore_response.demand_rfo.any_response          
       [Counts all demand data writes (RFOs) have any response type]
  offcore_response.demand_rfo.l3_hit.any_snoop      
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_hit.snoop_hit_no_fwd
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_hit.snoop_hitm     
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_hit.snoop_miss     
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_hit.snoop_none     
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_hit.snoop_not_needed
       [Counts all demand data writes (RFOs)]
  offcore_response.other.any_response               
       [Counts any other requests have any response type]
  offcore_response.other.l3_hit.any_snoop           
       [Counts any other requests]
  offcore_response.other.l3_hit.snoop_hit_no_fwd    
       [Counts any other requests]
  offcore_response.other.l3_hit.snoop_hitm          
       [Counts any other requests]
  offcore_response.other.l3_hit.snoop_miss          
       [Counts any other requests]
  offcore_response.other.l3_hit.snoop_none          
       [Counts any other requests]
  offcore_response.other.l3_hit.snoop_not_needed    
       [Counts any other requests]
  offcore_response.other.supplier_none.any_snoop    
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_hit_no_fwd
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_hitm   
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_miss   
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_none   
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_not_needed
       [Counts any other requests]
  offcore_response.pf_l2_code_rd.any_response       
       [Counts all prefetch (that bring data to LLC only) code reads have any
        response type]
  offcore_response.pf_l2_code_rd.l3_hit.any_snoop   
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_hitm  
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_miss  
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_none  
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.any_snoop
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_miss
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_none
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_data_rd.any_response       
       [Counts prefetch (that bring data to L2) data reads have any response
        type]
  offcore_response.pf_l2_data_rd.l3_hit.any_snoop   
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_hitm  
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_miss  
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_none  
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_not_needed
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.any_snoop
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_hit_no_fwd
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_hitm
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_miss
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_none
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_not_needed
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_rfo.any_response           
       [Counts all prefetch (that bring data to L2) RFOs have any response
        type]
  offcore_response.pf_l2_rfo.l3_hit.any_snoop       
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_hit.snoop_hitm      
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_hit.snoop_miss      
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_hit.snoop_none      
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_hit.snoop_not_needed
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.any_snoop
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_hitm
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_miss
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_none
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_not_needed
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l3_code_rd.any_response       
       [Counts prefetch (that bring data to LLC only) code reads have any
        response type]
  offcore_response.pf_l3_code_rd.l3_hit.any_snoop   
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_hit_no_fwd
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_hitm  
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_miss  
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_none  
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_not_needed
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.any_snoop
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_hit_no_fwd
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_hitm
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_miss
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_none
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_not_needed
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_data_rd.any_response       
       [Counts all prefetch (that bring data to LLC only) data reads have any
        response type]
  offcore_response.pf_l3_data_rd.l3_hit.any_snoop   
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_hitm  
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_miss  
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_none  
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.any_snoop
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_miss
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_none
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_rfo.any_response           
       [Counts all prefetch (that bring data to LLC only) RFOs have any
        response type]
  offcore_response.pf_l3_rfo.l3_hit.any_snoop       
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_hit.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_hit.snoop_hitm      
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_hit.snoop_miss      
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_hit.snoop_none      
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_hit.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.any_snoop
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_miss
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_none
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) RFOs]
  sq_misc.split_lock                                
       [Split locks in SQ]

floating point:
  fp_arith_inst_retired.128b_packed_double          
       [Number of SSE/AVX computational 128-bit packed double precision
        floating-point instructions retired. Each count represents 2
        computations. Applies to SSE* and AVX* packed double precision
        floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX
        SQRT DPP FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count twice
        as they perform multiple calculations per element]
  fp_arith_inst_retired.128b_packed_single          
       [Number of SSE/AVX computational 128-bit packed single precision
        floating-point instructions retired. Each count represents 4
        computations. Applies to SSE* and AVX* packed single precision
        floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX
        SQRT RSQRT DPP FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count
        twice as they perform multiple calculations per element]
  fp_arith_inst_retired.256b_packed_double          
       [Number of SSE/AVX computational 256-bit packed double precision
        floating-point instructions retired. Each count represents 4
        computations. Applies to SSE* and AVX* packed double precision
        floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX
        SQRT DPP FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count twice
        as they perform multiple calculations per element]
  fp_arith_inst_retired.256b_packed_single          
       [Number of SSE/AVX computational 256-bit packed single precision
        floating-point instructions retired. Each count represents 8
        computations. Applies to SSE* and AVX* packed single precision
        floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX
        SQRT RSQRT DPP FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count
        twice as they perform multiple calculations per element]
  fp_arith_inst_retired.double                      
       [Number of SSE/AVX computational double precision floating-point
        instructions retired. Applies to SSE* and AVX*scalar, double and
        single precision floating-point: ADD SUB MUL DIV MIN MAX SQRT DPP
        FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count twice as they
        perform multiple calculations per element]
  fp_arith_inst_retired.packed                      
       [Number of SSE/AVX computational packed floating-point instructions
        retired. Applies to SSE* and AVX*, packed, double and single precision
        floating-point: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX SQRT DPP
        FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count twice as they
        perform multiple calculations per element. (RSQRT for
        single-precision?)]
  fp_arith_inst_retired.scalar                      
       [Number of SSE/AVX computational scalar floating-point instructions
        retired. Applies to SSE* and AVX* scalar, double and single precision
        floating-point: ADD SUB MUL DIV MIN MAX RSQRT RCP SQRT FM(N)ADD/SUB.
        FM(N)ADD/SUB instructions count twice as they perform multiple
        calculations per element. (RSQRT for single precision?)]
  fp_arith_inst_retired.scalar_double               
       [Number of SSE/AVX computational scalar double precision floating-point
        instructions retired. Each count represents 1 computation. Applies to
        SSE* and AVX* scalar double precision floating-point instructions: ADD
        SUB MUL DIV MIN MAX SQRT FM(N)ADD/SUB. FM(N)ADD/SUB instructions count
        twice as they perform multiple calculations per element]
  fp_arith_inst_retired.scalar_single               
       [Number of SSE/AVX computational scalar single precision floating-point
        instructions retired. Each count represents 1 computation. Applies to
        SSE* and AVX* scalar single precision floating-point instructions: ADD
        SUB MUL DIV MIN MAX RCP RSQRT SQRT FM(N)ADD/SUB. FM(N)ADD/SUB
        instructions count twice as they perform multiple calculations per
        element]
  fp_arith_inst_retired.single                      
       [Number of SSE/AVX computational single precision floating-point
        instructions retired. Applies to SSE* and AVX*scalar, double and
        single precision floating-point: ADD SUB MUL DIV MIN MAX RCP RSQRT
        SQRT DPP FM(N)ADD/SUB. DPP and FM(N)ADD/SUB instructions count twice
        as they perform multiple calculations per element]
  fp_assist.any                                     
       [Counts any FP_ASSIST umask was incrementing (Precise Event)]
  fp_assist.simd_input                              
       [Any input SSE* FP Assist - (Precise Event)]
  fp_assist.simd_output                             
       [SSE* FP micro-code assist when output value is invalid. (Precise
        Event)]
  fp_assist.x87_input                               
       [input - Invalid Operation, Denormal Operand, SNaN Operand (Precise
        Event)]
  fp_assist.x87_output                              
       [output - Numeric Overflow, Numeric Underflow, Inexact Result (Precise
        Event)]
  other_assists.avx_to_sse                          
       [Number of transitions from AVX-256 to legacy SSE when penalty
        applicable (Precise Event) Spec update: BDM30]
  other_assists.sse_to_avx                          
       [Number of transitions from legacy SSE to AVX-256 when penalty
        applicable (Precise Event) Spec update: BDM30]

frontend:
  dsb2mite_switches.penalty_cycles                  
       [Decode Stream Buffer (DSB)-to-MITE switch true penalty cycles]
  icache.hit                                        
       [Number of Instruction Cache, Streaming Buffer and Victim Cache Reads.
        both cacheable and noncacheable, including UC fetches]
  icache.ifdata_stall                               
       [Cycles where a code fetch is stalled due to L1 instruction-cache miss]
  icache.misses                                     
       [Number of Instruction Cache, Streaming Buffer and Victim Cache Misses.
        Includes Uncacheable accesses]
  idq.all_dsb_cycles_4_uops                         
       [Cycles Decode Stream Buffer (DSB) is delivering 4 Uops]
  idq.all_dsb_cycles_any_uops                       
       [Cycles Decode Stream Buffer (DSB) is delivering any Uop]
  idq.all_mite_cycles_4_uops                        
       [Cycles MITE is delivering 4 Uops]
  idq.all_mite_cycles_any_uops                      
       [Cycles MITE is delivering any Uop]
  idq.dsb_cycles                                    
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        from Decode Stream Buffer (DSB) path]
  idq.dsb_uops                                      
       [Uops delivered to Instruction Decode Queue (IDQ) from the Decode
        Stream Buffer (DSB) path]
  idq.empty                                         
       [Instruction Decode Queue (IDQ) empty cycles]
  idq.mite_all_uops                                 
       [Uops delivered to Instruction Decode Queue (IDQ) from MITE path]
  idq.mite_cycles                                   
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        from MITE path]
  idq.mite_uops                                     
       [Uops delivered to Instruction Decode Queue (IDQ) from MITE path]
  idq.ms_cycles                                     
       [Cycles when uops are being delivered to Instruction Decode Queue (IDQ)
        while Microcode Sequenser (MS) is busy]
  idq.ms_dsb_cycles                                 
       [Cycles when uops initiated by Decode Stream Buffer (DSB) are being
        delivered to Instruction Decode Queue (IDQ) while Microcode Sequenser
        (MS) is busy]
  idq.ms_dsb_occur                                  
       [Deliveries to Instruction Decode Queue (IDQ) initiated by Decode
        Stream Buffer (DSB) while Microcode Sequenser (MS) is busy]
  idq.ms_dsb_uops                                   
       [Uops initiated by Decode Stream Buffer (DSB) that are being delivered
        to Instruction Decode Queue (IDQ) while Microcode Sequenser (MS) is
        busy]
  idq.ms_mite_uops                                  
       [Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ)
        while Microcode Sequenser (MS) is busy]
  idq.ms_switches                                   
       [Number of switches from DSB (Decode Stream Buffer) or MITE (legacy
        decode pipeline) to the Microcode Sequencer]
  idq.ms_uops                                       
       [Uops delivered to Instruction Decode Queue (IDQ) while Microcode
        Sequenser (MS) is busy]
  idq_uops_not_delivered.core                       
       [Uops not delivered to Resource Allocation Table (RAT) per thread when
        backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_0_uops_deliv.core   
       [Cycles per thread when 4 or more uops are not delivered to Resource
        Allocation Table (RAT) when backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_fe_was_ok           
       [Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT)
        was stalling FE]
  idq_uops_not_delivered.cycles_le_1_uop_deliv.core 
       [Cycles per thread when 3 or more uops are not delivered to Resource
        Allocation Table (RAT) when backend of the machine is not stalled]
  idq_uops_not_delivered.cycles_le_2_uop_deliv.core 
       [Cycles with less than 2 uops delivered by the front end]
  idq_uops_not_delivered.cycles_le_3_uop_deliv.core 
       [Cycles with less than 3 uops delivered by the front end]

memory:
  hle_retired.aborted                               
       [Number of times HLE abort was triggered (PEBS) (Precise event)]
  hle_retired.aborted_misc1                         
       [Number of times an HLE execution aborted due to various memory events
        (e.g., read/write capacity and conflicts)]
  hle_retired.aborted_misc2                         
       [Number of times an HLE execution aborted due to uncommon conditions]
  hle_retired.aborted_misc3                         
       [Number of times an HLE execution aborted due to HLE-unfriendly
        instructions]
  hle_retired.aborted_misc4                         
       [Number of times an HLE execution aborted due to incompatible memory
        type]
  hle_retired.aborted_misc5                         
       [Number of times an HLE execution aborted due to none of the previous 4
        categories (e.g. interrupts)]
  hle_retired.commit                                
       [Number of times HLE commit succeeded]
  hle_retired.start                                 
       [Number of times we entered an HLE region; does not count nested
        transactions]
  machine_clears.memory_ordering                    
       [Counts the number of machine clears due to memory order conflicts]
  mem_trans_retired.load_latency_gt_128             
       [Randomly selected loads with latency value being above 128 Spec
        update: BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_16              
       [Randomly selected loads with latency value being above 16 Spec update:
        BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_256             
       [Randomly selected loads with latency value being above 256 Spec
        update: BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_32              
       [Randomly selected loads with latency value being above 32 Spec update:
        BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_4               
       [Randomly selected loads with latency value being above 4 Spec update:
        BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_512             
       [Randomly selected loads with latency value being above 512 Spec
        update: BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_64              
       [Randomly selected loads with latency value being above 64 Spec update:
        BDM100, BDM35 (Must be precise)]
  mem_trans_retired.load_latency_gt_8               
       [Randomly selected loads with latency value being above 8 Spec update:
        BDM100, BDM35 (Must be precise)]
  misalign_mem_ref.loads                            
       [Speculative cache line split load uops dispatched to L1 cache]
  misalign_mem_ref.stores                           
       [Speculative cache line split STA uops dispatched to L1 cache]
  offcore_response.all_data_rd.l3_hit.snoop_non_dram
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss.snoop_hit_no_fwd
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss.snoop_miss   
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss.snoop_none   
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss.snoop_not_needed
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.any_snoop
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_hitm
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_miss
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_none
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all demand & prefetch data reads]
  offcore_response.all_data_rd.supplier_none.snoop_non_dram
       [Counts all demand & prefetch data reads]
  offcore_response.all_pf_code_rd.l3_hit.snoop_non_dram
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss.snoop_miss
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss.snoop_none
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss.snoop_not_needed
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.any_snoop
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_miss
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_none
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch code reads]
  offcore_response.all_pf_code_rd.supplier_none.snoop_non_dram
       [Counts all prefetch code reads]
  offcore_response.all_pf_data_rd.l3_hit.snoop_non_dram
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss.snoop_miss
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss.snoop_none
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss.snoop_not_needed
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.any_snoop
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_miss
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_none
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch data reads]
  offcore_response.all_pf_data_rd.supplier_none.snoop_non_dram
       [Counts all prefetch data reads]
  offcore_response.all_pf_rfo.l3_hit.snoop_non_dram 
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss.snoop_hit_no_fwd
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss.snoop_miss    
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss.snoop_none    
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss.snoop_not_needed
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.any_snoop
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_hitm
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_miss
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_non_dram
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_none
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.l3_miss_local_dram.snoop_not_needed
       [Counts prefetch RFOs]
  offcore_response.all_pf_rfo.supplier_none.snoop_non_dram
       [Counts prefetch RFOs]
  offcore_response.all_rfo.l3_hit.snoop_non_dram    
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss.snoop_hit_no_fwd 
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss.snoop_miss       
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss.snoop_none       
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss.snoop_not_needed 
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.any_snoop
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_hitm
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_miss
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_non_dram
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_none
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.l3_miss_local_dram.snoop_not_needed
       [Counts all demand & prefetch RFOs]
  offcore_response.all_rfo.supplier_none.snoop_non_dram
       [Counts all demand & prefetch RFOs]
  offcore_response.corewb.l3_hit.snoop_non_dram     
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss.snoop_hit_no_fwd  
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss.snoop_miss        
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss.snoop_none        
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss.snoop_not_needed  
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.any_snoop
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_hitm
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_miss
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_non_dram
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_none
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.l3_miss_local_dram.snoop_not_needed
       [Counts writebacks (modified to exclusive)]
  offcore_response.corewb.supplier_none.snoop_non_dram
       [Counts writebacks (modified to exclusive)]
  offcore_response.demand_code_rd.l3_hit.snoop_non_dram
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss.snoop_hit_no_fwd
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss.snoop_miss
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss.snoop_none
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss.snoop_not_needed
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.any_snoop
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_hitm
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_miss
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_none
       [Counts all demand code reads]
  offcore_response.demand_code_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all demand code reads]
  offcore_response.demand_code_rd.supplier_none.snoop_non_dram
       [Counts all demand code reads]
  offcore_response.demand_data_rd.l3_hit.snoop_non_dram
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss.snoop_hit_no_fwd
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss.snoop_miss
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss.snoop_none
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss.snoop_not_needed
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.any_snoop
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_hitm
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_miss
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_non_dram
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_none
       [Counts demand data reads]
  offcore_response.demand_data_rd.l3_miss_local_dram.snoop_not_needed
       [Counts demand data reads]
  offcore_response.demand_data_rd.supplier_none.snoop_non_dram
       [Counts demand data reads]
  offcore_response.demand_rfo.l3_hit.snoop_non_dram 
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_miss.snoop_hit_no_fwd
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_miss.snoop_miss    
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_miss.snoop_none    
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_miss.snoop_not_needed
       [Counts all demand data writes (RFOs)]
  offcore_response.demand_rfo.l3_miss_local_dram.any_snoop
       [Counts all demand data writes (RFOs)]
  offcore_response.other.l3_hit.snoop_non_dram      
       [Counts any other requests]
  offcore_response.other.l3_miss.snoop_hit_no_fwd   
       [Counts any other requests]
  offcore_response.other.l3_miss.snoop_miss         
       [Counts any other requests]
  offcore_response.other.l3_miss.snoop_none         
       [Counts any other requests]
  offcore_response.other.l3_miss.snoop_not_needed   
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.any_snoop
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_hitm
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_miss
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_non_dram
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_none
       [Counts any other requests]
  offcore_response.other.l3_miss_local_dram.snoop_not_needed
       [Counts any other requests]
  offcore_response.other.supplier_none.snoop_non_dram
       [Counts any other requests]
  offcore_response.pf_l2_code_rd.l3_hit.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss.snoop_miss 
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss.snoop_none 
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.any_snoop
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_miss
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_none
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_code_rd.supplier_none.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l2_data_rd.l3_hit.snoop_non_dram
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss.snoop_hit_no_fwd
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss.snoop_miss 
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss.snoop_none 
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss.snoop_not_needed
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.any_snoop
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_hitm
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_miss
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_non_dram
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_none
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.l3_miss_local_dram.snoop_not_needed
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_data_rd.supplier_none.snoop_non_dram
       [Counts prefetch (that bring data to L2) data reads]
  offcore_response.pf_l2_rfo.l3_hit.snoop_non_dram  
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss.snoop_miss     
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss.snoop_none     
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss.snoop_not_needed
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.any_snoop
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_miss
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_none
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l2_rfo.supplier_none.snoop_non_dram
       [Counts all prefetch (that bring data to L2) RFOs]
  offcore_response.pf_l3_code_rd.l3_hit.snoop_non_dram
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss.snoop_hit_no_fwd
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss.snoop_miss 
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss.snoop_none 
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss.snoop_not_needed
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.any_snoop
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_hitm
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_miss
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_non_dram
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_none
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.l3_miss_local_dram.snoop_not_needed
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_code_rd.supplier_none.snoop_non_dram
       [Counts prefetch (that bring data to LLC only) code reads]
  offcore_response.pf_l3_data_rd.l3_hit.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss.snoop_miss 
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss.snoop_none 
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.any_snoop
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_miss
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_none
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_data_rd.supplier_none.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) data reads]
  offcore_response.pf_l3_rfo.l3_hit.snoop_non_dram  
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss.snoop_miss     
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss.snoop_none     
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.any_snoop
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_hit_no_fwd
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_hitm
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_miss
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_none
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.l3_miss_local_dram.snoop_not_needed
       [Counts all prefetch (that bring data to LLC only) RFOs]
  offcore_response.pf_l3_rfo.supplier_none.snoop_non_dram
       [Counts all prefetch (that bring data to LLC only) RFOs]
  rtm_retired.aborted                               
       [Number of times RTM abort was triggered (PEBS) (Precise event)]
  rtm_retired.aborted_misc1                         
       [Number of times an RTM execution aborted due to various memory events
        (e.g. read/write capacity and conflicts)]
  rtm_retired.aborted_misc2                         
       [Number of times an RTM execution aborted due to various memory events
        (e.g., read/write capacity and conflicts)]
  rtm_retired.aborted_misc3                         
       [Number of times an RTM execution aborted due to HLE-unfriendly
        instructions]
  rtm_retired.aborted_misc4                         
       [Number of times an RTM execution aborted due to incompatible memory
        type]
  rtm_retired.aborted_misc5                         
       [Number of times an RTM execution aborted due to none of the previous 4
        categories (e.g. interrupt)]
  rtm_retired.commit                                
       [Number of times RTM commit succeeded]
  rtm_retired.start                                 
       [Number of times we entered an RTM region; does not count nested
        transactions]
  tx_exec.misc1                                     
       [Counts the number of times a class of instructions that may cause a
        transactional abort was executed. Since this is the count of
        execution, it may not always cause a transactional abort]
  tx_exec.misc2                                     
       [Counts the number of times a class of instructions (e.g., vzeroupper)
        that may cause a transactional abort was executed inside a
        transactional region]
  tx_exec.misc3                                     
       [Counts the number of times an instruction execution caused the
        transactional nest count supported to be exceeded]
  tx_exec.misc4                                     
       [Counts the number of times a XBEGIN instruction was executed inside an
        HLE transactional region]
  tx_exec.misc5                                     
       [Counts the number of times an HLE XACQUIRE instruction was executed
        inside an RTM transactional region]
  tx_mem.abort_capacity_write                       
       [Number of times a TSX Abort was triggered due to an evicted line
        caused by a transaction overflow]
  tx_mem.abort_conflict                             
       [Number of times a TSX line had a cache conflict]
  tx_mem.abort_hle_elision_buffer_mismatch          
       [Number of times a TSX Abort was triggered due to release/commit but
        data and address mismatch]
  tx_mem.abort_hle_elision_buffer_not_empty         
       [Number of times a TSX Abort was triggered due to commit but Lock
        Buffer not empty]
  tx_mem.abort_hle_elision_buffer_unsupported_alignment
       [Number of times a TSX Abort was triggered due to attempting an
        unsupported alignment from Lock Buffer]
  tx_mem.abort_hle_store_to_elided_lock             
       [Number of times a TSX Abort was triggered due to a non-release/commit
        store to lock]
  tx_mem.hle_elision_buffer_full                    
       [Number of times we could not allocate Lock Buffer]

other:
  cpl_cycles.ring0                                  
       [Unhalted core cycles when the thread is in ring 0]
  cpl_cycles.ring0_trans                            
       [Number of intervals between processor halts while thread is in ring 0]
  cpl_cycles.ring123                                
       [Unhalted core cycles when thread is in rings 1, 2, or 3]
  lock_cycles.split_lock_uc_lock_duration           
       [Cycles when L1 and L2 are locked due to UC or split lock]

pipeline:
  arith.fpu_div_active                              
       [Cycles when divider is busy executing divide operations]
  baclears.any                                      
       [Counts the total number when the front end is resteered, mainly when
        the BPU cannot provide a correct prediction and this is corrected by
        other branch handling mechanisms at the front end]
  br_inst_exec.all_branches                         
       [Speculative and retired branches]
  br_inst_exec.all_conditional                      
       [Speculative and retired macro-conditional branches]
  br_inst_exec.all_direct_jmp                       
       [Speculative and retired macro-unconditional branches excluding calls
        and indirects]
  br_inst_exec.all_direct_near_call                 
       [Speculative and retired direct near calls]
  br_inst_exec.all_indirect_jump_non_call_ret       
       [Speculative and retired indirect branches excluding 